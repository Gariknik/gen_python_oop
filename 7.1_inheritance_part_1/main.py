#1
"""
–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üõ∏
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –ø—É—Å—Ç—ã—Ö –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:



–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

print(issubclass(LandVehicle, Vehicle))
print(issubclass(WaterVehicle, Vehicle))
print(issubclass(AirVehicle, Vehicle))
Sample Output 1:

True
True
True
Sample Input 2:

print(issubclass(Car, LandVehicle))
print(issubclass(Motocycle, LandVehicle))
print(issubclass(Bicycle, LandVehicle))
Sample Output 2:

True
True
True

"""

class Vehicle:
    pass

class LandVehicle(Vehicle):
    pass

class WaterVehicle(Vehicle):
    pass

class AirVehicle(Vehicle):
    pass


class Car(LandVehicle):
    pass

class Motocycle(LandVehicle):
    pass

class Bicycle(LandVehicle):
    pass


class Propeller(AirVehicle):
    pass

class Jet(AirVehicle):
    pass



#2
"""

–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üî∂
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –ø—É—Å—Ç—ã—Ö –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã:

"""
class Shape:
    pass

class Polygon(Shape):
    pass

class Circle(Shape):
    pass

class Quadrilateral(Polygon):
    pass


class Triangle(Polygon):
    pass

class Parallelogram(Quadrilateral):
    pass

class IsoscelesTriangle(Triangle):
    pass


class EquilateralTriangle(Triangle):
    pass

class Rectangle(Quadrilateral):
    pass

class Square(Rectangle):
    pass

#3
"""
–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üêç
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö:



–ö–ª–∞—Å—Å Animal –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

sleep() ‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
eat()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å Fish –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

swim()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å Bird –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

lay_eggs()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å FlyingBird –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

fly()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input:

print(issubclass(Fish, Animal))
print(issubclass(Bird, Animal))
print(issubclass(FlyingBird, Animal))
print(issubclass(FlyingBird, Bird))
Sample Output:

True
True
True
True


"""
class Animal:
    def __init__(self):
        pass

    def sleep(self):
        pass

    def eat(self):
        pass

class Fish(Animal):
    def swim(self):
        pass

class Bird(Animal):
    def lay_eggs(self):
        pass

class FlyingBird(Bird):
    def fly(self):
        pass


if __name__ == '__main__':
    print(issubclass(Car, LandVehicle))
    print(issubclass(Motocycle, LandVehicle))
    print(issubclass(Bicycle, LandVehicle))


    print(issubclass(Triangle, Polygon))
    print(issubclass(IsoscelesTriangle, Triangle))
    print(issubclass(EquilateralTriangle, Triangle))


    print(issubclass(Fish, Animal))
    print(issubclass(Bird, Animal))
    print(issubclass(FlyingBird, Animal))
    print(issubclass(FlyingBird, Bird))