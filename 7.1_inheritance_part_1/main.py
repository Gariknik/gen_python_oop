#1
"""
–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üõ∏
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –ø—É—Å—Ç—ã—Ö –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:



–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

print(issubclass(LandVehicle, Vehicle))
print(issubclass(WaterVehicle, Vehicle))
print(issubclass(AirVehicle, Vehicle))
Sample Output 1:

True
True
True
Sample Input 2:

print(issubclass(Car, LandVehicle))
print(issubclass(Motocycle, LandVehicle))
print(issubclass(Bicycle, LandVehicle))
Sample Output 2:

True
True
True

"""

class Vehicle:
    pass

class LandVehicle(Vehicle):
    pass

class WaterVehicle(Vehicle):
    pass

class AirVehicle(Vehicle):
    pass


class Car(LandVehicle):
    pass

class Motocycle(LandVehicle):
    pass

class Bicycle(LandVehicle):
    pass


class Propeller(AirVehicle):
    pass

class Jet(AirVehicle):
    pass



#2
"""

–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üî∂
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –ø—É—Å—Ç—ã—Ö –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã:

"""
class Shape:
    pass

class Polygon(Shape):
    pass

class Circle(Shape):
    pass

class Quadrilateral(Polygon):
    pass


class Triangle(Polygon):
    pass

class Parallelogram(Quadrilateral):
    pass

class IsoscelesTriangle(Triangle):
    pass


class EquilateralTriangle(Triangle):
    pass

class Rectangle(Quadrilateral):
    pass

class Square(Rectangle):
    pass

#3
"""
–ò–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤ üêç
–° –ø–æ–º–æ—â—å—é –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∏–∂–µ —Å—Ö–µ–º—ã –ø–æ—Å—Ç—Ä–æ–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –∫–ª–∞—Å—Å–æ–≤, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö:



–ö–ª–∞—Å—Å Animal –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

sleep() ‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
eat()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å Fish –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

swim()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å Bird –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

lay_eggs()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ö–ª–∞—Å—Å FlyingBird –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

fly()‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input:

print(issubclass(Fish, Animal))
print(issubclass(Bird, Animal))
print(issubclass(FlyingBird, Animal))
print(issubclass(FlyingBird, Bird))
Sample Output:

True
True
True
True


"""
class Animal:
    def __init__(self):
        pass

    def sleep(self):
        pass

    def eat(self):
        pass

class Fish(Animal):
    def swim(self):
        pass

class Bird(Animal):
    def lay_eggs(self):
        pass

class FlyingBird(Bird):
    def fly(self):
        pass


#4
"""

–ö–ª–∞—Å—Å—ã User –∏ PremiumUser
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å User, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å–∞. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

name ‚Äî –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ö–ª–∞—Å—Å User –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

skip_ads() ‚Äî –º–µ—Ç–æ–¥, –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π False 
–¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å PremiumUser, –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ –∫–ª–∞—Å—Å–∞ User, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å–∞ —Å –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π. –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ PremiumUser –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ User.

–ö–ª–∞—Å—Å PremiumUser –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

skip_ads() ‚Äî –º–µ—Ç–æ–¥, –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π True 
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤ –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

print(issubclass(PremiumUser, User))
Sample Output 1:

True
Sample Input 2:

user = User('Arthur')
premium_user = PremiumUser('Arthur')

print(user.skip_ads())
print(premium_user.skip_ads())
Sample Output 2:

False
True


"""
class User:
    def __init__(self, name):
        self.name = name

    def skip_ads(self):
        return False

class PremiumUser(User):
    def skip_ads(self):
        return True

#5
"""

–ö–ª–∞—Å—Å—ã Validator –∏ NumberValidator
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Validator, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

obj ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
–ö–ª–∞—Å—Å Validator –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

is_valid() ‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥, –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ None
–¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å NumberValidator, –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ –∫–ª–∞—Å—Å–∞ Validator, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å —Ç–∏–ø—É int –∏–ª–∏ float. –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ NumberValidator –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Validator.

–ö–ª–∞—Å—Å NumberValidator –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

is_valid() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π True, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–∏–ø—É int –∏–ª–∏ float, –∏–ª–∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤ –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

print(issubclass(NumberValidator, Validator))
Sample Output 1:

True
Sample Input 2:

validator1 = Validator('beegeek')
validator2 = Validator(1)
validator3 = Validator(1.1)

print(validator1.is_valid())
print(validator2.is_valid())
print(validator3.is_valid())
Sample Output 2:

None
None
None
Sample Input 3:

validator1 = NumberValidator('beegeek')
validator2 = NumberValidator(1)
validator3 = NumberValidator(1.1)

print(validator1.is_valid())
print(validator2.is_valid())
print(validator3.is_valid())
Sample Output 3:

False
True
True

"""

class Validator:
    def __init__(self, obj):
        self.obj = obj
    
    def is_valid(self):
        pass

class NumberValidator(Validator):
    def is_valid(self):
        return type(self.obj) in (int, float)
    

#6
"""

–ö–ª–∞—Å—Å Counter –∏ –ø–æ–¥–∫–ª–∞—Å—Å—ã
1. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Counter, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

start ‚Äî –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω—è–µ—Ç—Å—è 0
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Counter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç:

value ‚Äî —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
–ö–ª–∞—Å—Å Counter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

inc() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ —ç—Ç–æ —á–∏—Å–ª–æ. –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω —É–≤–µ–ª–∏—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É
dec() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ —É–º–µ–Ω—å—à–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ —ç—Ç–æ —á–∏—Å–ª–æ. –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω —É–º–µ–Ω—å—à–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É. –ó–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ä–∞–≤–Ω—ã–º 0, –µ—Å–ª–∏ –ø—Ä–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–∏ –æ–Ω–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
2. –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å NonDecCounter, –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ –∫–ª–∞—Å—Å–∞ Counter, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å—á–µ—Ç—á–∏–∫, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å, –Ω–æ –Ω–µ–ª—å–∑—è —É–º–µ–Ω—å—à–∞—Ç—å. –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ NonDecCounter –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Counter.

–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ NonDecCounter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç:

value ‚Äî —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
–ö–ª–∞—Å—Å NonDecCounter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

dec() ‚Äî –ø—É—Å—Ç–æ–π –º–µ—Ç–æ–¥. –°–∏–≥–Ω–∞—Ç—É—Ä–∞ –º–µ—Ç–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π –º–µ—Ç–æ–¥–∞ dec() –∫–ª–∞—Å—Å–∞ Counter
3. –ù–∞–∫–æ–Ω–µ—Ü, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å LimitedCounter, –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ –∫–ª–∞—Å—Å–∞ Counter, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å—á–µ—Ç—á–∏–∫, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –ª–∏—à—å –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

start ‚Äî –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω—è–µ—Ç—Å—è 0
limit ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω—è–µ—Ç—Å—è 10
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ LimitedCounter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç:

value ‚Äî —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
–ö–ª–∞—Å—Å LimitedCounter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

inc() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ —ç—Ç–æ —á–∏—Å–ª–æ. –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω —É–≤–µ–ª–∏—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É. –ü—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –º–µ—Ç–æ–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤ –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

print(issubclass(NonDecCounter, Counter))
print(issubclass(LimitedCounter, Counter))
Sample Output 1:

True
True
Sample Input 2:

counter = Counter()

print(counter.value)
counter.inc()
counter.inc(5)
print(counter.value)
counter.dec()
counter.dec(3)
print(counter.value)
counter.dec(10)
print(counter.value)
Sample Output 2:

0
6
2
0
Sample Input 3:

counter = NonDecCounter(10)

print(counter.value)
counter.inc()
counter.inc(10)
print(counter.value)
counter.dec()
counter.dec(10)
print(counter.value)
counter.dec(50)
print(counter.value)
Sample Output 3:

10
21
21
21
Sample Input 4:

counter = LimitedCounter()

print(counter.value)
counter.inc()
counter.inc(4)
print(counter.value)
counter.dec()
counter.dec(2)
print(counter.value)
counter.inc(20)
print(counter.value)
Sample Output 4:

0
5
2
10

"""

if __name__ == '__main__':
    print(issubclass(Car, LandVehicle))
    print(issubclass(Motocycle, LandVehicle))
    print(issubclass(Bicycle, LandVehicle))


    print(issubclass(Triangle, Polygon))
    print(issubclass(IsoscelesTriangle, Triangle))
    print(issubclass(EquilateralTriangle, Triangle))


    print(issubclass(Fish, Animal))
    print(issubclass(Bird, Animal))
    print(issubclass(FlyingBird, Animal))
    print(issubclass(FlyingBird, Bird))


    user = User('Arthur')
    premium_user = PremiumUser('Arthur')

    print(user.skip_ads())
    print(premium_user.skip_ads())


    validator1 = NumberValidator('beegeek')
    validator2 = NumberValidator(1)
    validator3 = NumberValidator(1.1)

    print(validator1.is_valid())
    print(validator2.is_valid())
    print(validator3.is_valid())