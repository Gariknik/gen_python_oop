#1
"""

–ö–ª–∞—Å—Å ColoredPoint
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å ColoredPoint, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Ü–≤–µ—Ç–Ω—É—é —Ç–æ—á–∫—É –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

x ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
x
y ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
y
color ‚Äî —Ü–≤–µ—Ç —Ç–æ—á–∫–∏
–ö–ª–∞—Å—Å ColoredPoint –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ç—Ä–∏ —Å–≤–æ–π—Å—Ç–≤–∞:

x ‚Äî —Å–≤–æ–π—Å—Ç–≤–æ, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
x
y ‚Äî —Å–≤–æ–π—Å—Ç–≤–æ, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
y
color ‚Äî —Å–≤–æ–π—Å—Ç–≤–æ, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ —Ü–≤–µ—Ç —Ç–æ—á–∫–∏
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ ColoredPoint –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:

ColoredPoint(<–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ x>, <–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ y>, '<—Ü–≤–µ—Ç —Ç–æ—á–∫–∏>')
–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ ColoredPoint –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ == –∏!=. –î–≤–µ —Ü–≤–µ—Ç–Ω—ã–µ —Ç–æ—á–∫–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —Ä–∞–≤–Ω—ã–º–∏, –µ—Å–ª–∏ –∏—Ö —Ü–≤–µ—Ç–∞ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –æ–±–µ–∏–º –æ—Å—è–º —Å–æ–≤–ø–∞–¥–∞—é—Ç.

–ù–∞–∫–æ–Ω–µ—Ü, –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ ColoredPoint –≤ —Ñ—É–Ω–∫—Ü–∏—é hash() –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –µ–≥–æ —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ hash() –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ä—Ç–µ–∂–∞, –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
x, –≤—Ç–æ—Ä—ã–º ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –ø–æ –æ—Å–∏ 
ÔøΩ
y, —Ç—Ä–µ—Ç—å–∏–º ‚Äî —Ü–≤–µ—Ç —Ç–æ—á–∫–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –º–µ—Ç–æ–¥, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –æ–ø–µ—Ä–∞—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É NotImplemented.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ ColoredPoint –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

point1 = ColoredPoint(1, 2, 'white')
point2 = ColoredPoint(1, 2, 'white')
point3 = ColoredPoint(3, 4, 'black')

print(point1 == point2)
print(hash(point1) == hash(point2))
print(point1 == point3)
print(hash(point1) == hash(point3))
Sample Output 1:

True
True
False
False
Sample Input 2:

points = {ColoredPoint(1, 2, 'white'): 10, ColoredPoint(1, 2, 'black'): 20}

print(points)
Sample Output 2:

{ColoredPoint(1, 2, 'white'): 10, ColoredPoint(1, 2, 'black'): 20}
Sample Input 3:

point = ColoredPoint(1, 2, 'white')

try:
    point.color = 'black'
except AttributeError as e:
    print('Error')
Sample Output 3:

Error

"""
from typing import Any


class ColoredPoint:
    def __init__(self, x, y, color):
        self.__x = x
        self.__y = y
        self.__color = color

    def __repr__(self):
        return f"ColoredPoint({self.x}, {self.y}, '{self.color}')"

    @property
    def x(self):
        return self.__x
    
    @property
    def y(self):
        return self.__y
    
    @property
    def color(self):
        return self.__color
    
    def __eq__(self, other) -> bool:
        if isinstance(other, ColoredPoint):
            return self.x == other.x and self.y == other.y and self.color == other.color
        return NotImplemented
    
    def __hash__(self) -> int:
        return hash((self.x, self.y, self.color))
    
#2
"""
–ö–ª–∞—Å—Å Rowüå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Row, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –∞—Ç—Ä–∏–±—É—Ç–æ–≤. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É.

–ö–ª–∞—Å—Å Row –¥–æ–ª–∂–µ–Ω –∑–∞–ø—Ä–µ—â–∞—Ç—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã —Å–≤–æ–∏–º —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º. –ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –∑–∞–ø—Ä–µ—â–∞—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ —É–¥–∞–ª—è—Ç—å –∏—Ö. –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç –¥–æ–ª–∂–Ω–æ –≤–æ–∑–±—É–∂–¥–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ AttributeError —Å —Ç–µ–∫—Å—Ç–æ–º:

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞
–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ –∏–º–µ—é—â–µ–≥–æ—Å—è –∞—Ç—Ä–∏–±—É—Ç–∞ –¥–æ–ª–∂–Ω–æ –≤–æ–∑–±—É–∂–¥–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ AttributeError —Å —Ç–µ–∫—Å—Ç–æ–º:

–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –¥–æ–ª–∂–Ω–æ –≤–æ–∑–±—É–∂–¥–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ AttributeError —Å —Ç–µ–∫—Å—Ç–æ–º:

–£–¥–∞–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Row –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:

Row(<–∏–º—è 1-–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞>=<–∑–Ω–∞—á–µ–Ω–∏–µ 1-–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞>, <–∏–º—è 2-–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞>=<–∑–Ω–∞—á–µ–Ω–∏–µ 2-–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞>, ...)
–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ Row –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ == –∏!=. –î–≤–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Row —Å—á–∏—Ç–∞—é—Ç—Å—è —Ä–∞–≤–Ω—ã–º–∏, –µ—Å–ª–∏ –∏—Ö –Ω–∞–±–æ—Ä—ã –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ø–æ–∑–∏—Ü–∏–∏, –∏–º–µ–Ω–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è.

–ù–∞–∫–æ–Ω–µ—Ü, –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Row –≤ —Ñ—É–Ω–∫—Ü–∏—é hash() –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –µ–≥–æ —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏–µ. –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö–µ—à-–∑–Ω–∞—á–µ–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º, –æ–¥–Ω–∞–∫–æ –æ–Ω –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã —ç–∫–∑–µ–º–ø–ª—è—Ä–∞, –∏—Ö –ø–æ–∑–∏—Ü–∏–∏, –∏–º–µ–Ω–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞ Row —è–≤–ª—è—é—Ç—Å—è —Ö–µ—à–∏—Ä—É–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–º —Å—Ç—Ä–æ–∫–æ–≤–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Ç–∏–ø—É str, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—Ä–∞–º–ª–µ–Ω—ã –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –º–µ—Ç–æ–¥, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –æ–ø–µ—Ä–∞—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É NotImplemented.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 5. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ Row –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 6. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

row = Row(a='A', b='B', c='C')

print(row)
print(row.a, row.b, row.c)
Sample Output 1:

Row(a='A', b='B', c='C')
A B C
Sample Input 2:

row1 = Row(a=1, b=2, c=3)
row2 = Row(a=1, b=2, c=3)
row3 = Row(b=2, c=3, a=1)

print(row1 == row2)
print(hash(row1) == hash(row2))
print(row1 == row3)
print(hash(row1) == hash(row3))
Sample Output 2:

True
True
False
False
Sample Input 3:

row = Row(a=1, b=2, c=3)

try:
    row.d = 4
except AttributeError as e:
    print(e)
Sample Output 3:

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞


"""

class Row:
    def __init__(self, **kwargs):
        self.__dict__.update(kwargs)
    
    def __repr__(self):
        result = []
        for key, value in self.__dict__.items():
            result += [f"{key} = '{value}'"] if type(value) == str else [f"{key} = {value}"]
        return f"Row({', '.join(result)})"

    def __setattr__(self, attr, value):
        if attr in self.__dict__:
            raise AttributeError ('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
        raise AttributeError ('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞')
    
    def __delattr__(self, attr):
        raise AttributeError ('–£–¥–∞–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
    
    def __eq__(self, other):
        if isinstance(other, Row):
            return repr(self) == repr(other)
        return NotImplemented
    
    def __hash__(self):
        return hash(repr(self))



if __name__ == '__main__':
    point1 = ColoredPoint(1, 2, 'white')
    point2 = ColoredPoint(1, 2, 'white')
    point3 = ColoredPoint(3, 4, 'black')

    print(point1 == point2)
    print(hash(point1) == hash(point2))
    print(point1 == point3)
    print(hash(point1) == hash(point3))

    row1 = Row(a=1, b=2, c=3)
    row2 = Row(a=1, b=2, c=3)
    row3 = Row(b=2, c=3, a=1)

    print(row1 == row2)
    print(hash(row1) == hash(row2))
    print(row1 == row3)
    print(hash(row1) == hash(row3))